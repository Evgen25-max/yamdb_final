name: yamdb_final-app

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt

    - name: Lint with flake8
      run: flake8 --max-line-length=119 --exclude=tests,migrations .

    - name: Test with pytest
      run: pytest

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    if: github.ref == 'refs/heads/master'||'refs/heads/main'
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: evgen25max/python:3.8.5

  copy_file_to_server:
    name: scp_copy_file
    if: github.ref == 'refs/heads/master'||'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - uses: actions/checkout@master
    - name: copy file via ssh key
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        source: "docker-compose.yaml,.env,static/redoc.yaml,nginx/*"
        overwrite: true
        target: "app"
  deploy:
   name: deploy
   runs-on: ubuntu-latest
   if: github.ref == 'refs/heads/master'||'refs/heads/main'
   needs: copy_file_to_server
   steps:
   - name: executing remote ssh commands to deploy
     uses: appleboy/ssh-action@master
     with:
       host: ${{ secrets.HOST }}
       username: ${{ secrets.USER }}
       key: ${{ secrets.SSH_KEY }}
       passphrase: ${{ secrets.PASSPHRASE }}
       script: |
         sudo apt update
         sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y
         curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
         sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
         sudo apt update 
         sudo apt install docker-ce -y
         sudo curl -L "https://github.com/docker/compose/releases/download/1.28.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
         sudo chmod +x /usr/local/bin/docker-compose
         cd app
         sudo docker-compose kill nginx web db
         sudo docker pull evgen25max/python:3.8.5
         sudo docker pull nginx:1.19.6
         sudo docker-compose up -d
  send_message:
    name: send_message_master_branch
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message master
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} в ветку ${{ github.ref }} успешно выполнен!
  send_message_no_master:
    name: send_message_no_master_branch
    if: github.ref != 'refs/heads/master'||'refs/heads/main'
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: send message master
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} в ветку ${{ github.ref }} успешно выполнен!
